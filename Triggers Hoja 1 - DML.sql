--EJ1

CREATE TABLE AUDITAREMPLE(
    COL1 VARCHAR2(200)
);

CREATE OR REPLACE TRIGGER EJ1
AFTER UPDATE ON EMPLE
FOR EACH ROW
BEGIN
    IF(:NEW.SALARIO > (:OLD.SALARIO/100)*5) THEN
    INSERT INTO AUDITAREMPLE VALUES (SYSDATE||:NEW.EMP_NO||:OLD.SALARIO||:NEW.SALARIO);
    END IF;
END;

UPDATE EMPLE SET SALARIO = 500000 WHERE EMP_NO=3333;


--EJ2
CREATE TABLE EJ2EMPLE (
    fecha date,
    emp_no number,
    apellido varchar2(50),
    tipo_operacion varchar2(40)
);


CREATE OR REPLACE TRIGGER EJ2
AFTER INSERT OR UPDATE OR DELETE ON EMPLE
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO EJ2EMPLE VALUES (SYSDATE,:NEW.EMP_NO,:NEW.APELLIDO,'INSERCIÓN');
    ELSIF UPDATING THEN 
      INSERT INTO EJ2EMPLE VALUES (SYSDATE,:NEW.EMP_NO,:NEW.APELLIDO,'ACTUALIZACIÓN');
    ELSE 
         INSERT INTO EJ2EMPLE VALUES (SYSDATE,:OLD.EMP_NO,:OLD.APELLIDO,'BORRADO');
    END IF;
END;

UPDATE EMPLE SET SALARIO = 3 WHERE EMP_NO = 7369;


--EJ3

CREATE OR REPLACE TRIGGER EJ3
AFTER UPDATE ON EMPLE
FOR EACH ROW
BEGIN
    IF (:NEW.SALARIO<:OLD.SALARIO) THEN
        RAISE_APPLICATION_ERROR(-20010,'No se puede reducir el salario');
    END IF;
END;

UPDATE EMPLE SET SALARIO = 1 WHERE EMP_NO = 7369;

--EJ4

CREATE TABLE AUDITADEPARTMENTS(
    usuario varchar2(50),
    operacion varchar2(50),
    fecha date
);


CREATE OR REPLACE TRIGGER EJ4
AFTER INSERT OR UPDATE OR DELETE ON DEPARTMENTS
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO AUDITADEPARTMENTS VALUES (user,'Alta',SYSDATE);
    ELSIF UPDATING THEN
        INSERT INTO AUDITADEPARTMENTS VALUES (user,'Actualización',SYSDATE);
    ELSE
        INSERT INTO AUDITADEPARTMENTS VALUES(user,'Baja',SYSDATE);
    END IF;
END;

UPDATE DEPARTMENTS SET DEPARTMENT_NAME = 'XD' WHERE DEPARTMENT_ID=10;


--EJ5

CREATE OR REPLACE PROCEDURE EJ5
AS
    CURSOR C_5 IS SELECT COUNT(*) EMPLEADOS,EMPLOYEES.DEPARTMENT_ID FROM EMPLOYEES 
                        JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
                        GROUP BY EMPLOYEES.DEPARTMENT_ID;
BEGIN
    FOR v_5 IN C_5 LOOP
        UPDATE DEPARTMENTS SET N_EMPLEADOS = v_5.empleados WHERE DEPARTMENT_ID = v_5.DEPARTMENT_ID;
    END LOOP;
END;

BEGIN
EJ5;
END;

CREATE OR REPLACE TRIGGER EJ5T 
AFTER INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    UPDATE DEPARTMENTS SET N_EMPLEADOS = (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = :NEW.DEPARTMENT_ID);
END;

--EJ6

CREATE OR REPLACE PROCEDURE EJ6
AS
    CURSOR C_6 IS SELECT DECODE(SUM(YTD_SALE),NULL,0,SUM(YTD_SALE)) SUMA,TITLE.PUB_ID FROM TITLE 
                    LEFT JOIN PUBLISHER ON TITLE.PUB_ID = PUBLISHER.PUB_ID
                    GROUP BY TITLE.PUB_ID;
BEGIN
    FOR v_6 IN C_6 LOOP
        UPDATE PUBLISHER SET EJEMPLARES_VENDIDOS = v_6.SUMA WHERE PUB_ID = v_6.PUB_ID;
    END LOOP;
END;


BEGIN
EJ6;
END;